{"version":3,"sources":["Page.js","App.js","serviceWorker.js","index.js"],"names":["StyledPage","styled","div","_templateObject","_ref","zIndex","_ref2","isCover","_ref3","_ref4","flipped","rotateY","concat","_ref5","delay","StyledSide","_templateObject2","_ref6","_ref7","page","StyledPageFront","_templateObject3","_ref8","_ref9","_ref10","_ref11","_ref12","StyledPageBack","_templateObject4","_ref13","_ref14","Page","_ref15","_ref15$delay","react_default","a","createElement","PAGES","bounceAnimation","keyframes","App_templateObject","stopAnimation","App_templateObject2","StyledWrapper","App_templateObject3","StyledBook","App_templateObject4","css","_templateObject5","_templateObject6","StyledBookWrapper","_templateObject7","StyledSpin","_templateObject8","App","state","flip","_this","setState","this","onClick","map","index","src_Page","includes","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.514e2f5f.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledPage = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  transform-style: preserve-3d;\n  width: 250px;\n  height: 100%;\n  z-index: ${({ zIndex }) => zIndex};\n  box-shadow: 0px 0px 1px 0px #00000033;\n  border-top-left-radius: ${({ isCover }) => isCover ? '0' : '3'}px;\n  border-bottom-left-radius: ${({ isCover }) => isCover ? '0' : '3'}px;\n  transform: rotate3d(0, 1, 0, ${({ flipped, rotateY }) => flipped ? `${rotateY}deg` : '-0deg'});\n  transition: all 1s ease ${({ delay }) => delay}s;\n  transform-origin: left center;\n`\n\nconst StyledSide = styled.div`\n  width: 100%;\n  height: 100%;\n  transform-style: preserve-3d;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-size: ${({ isCover }) => isCover ? 'contain' : 'cover'};\n  backface-visibility: hidden;\n  background-image: url(\"${({ page }) => page}\");\n`\n\nconst StyledPageFront = styled(StyledSide)`\n  box-shadow: ${({ isCover }) => !isCover ? 'inset 15px 0px 12px -10px #0000002e' : '' };\n  border-top-right-radius: ${({ isCover }) => isCover ? '3px' : '0px'};\n  border-bottom-right-radius: ${({ isCover }) => isCover ? '3px' : '0px'};\n  border-top-left-radius: ${({ isCover, flipped }) => !isCover && flipped ? '3px' : '0px'};\n  border-bottom-left-radius: ${({ isCover, flipped }) => !isCover && flipped ? '3px' : '0px'};\n`\n\nconst StyledPageBack = styled(StyledSide)`\n  transform: rotate3d(0, 1, 0, -180deg);\n  box-shadow: inset -15px -1px 16px -5px #00000036;\n  border-top-right-radius: ${({ isCover }) => isCover ? '0px' : '3px'};\n  border-bottom-right-radius: ${({ isCover }) => isCover ? '0px' : '3px'};\n`\n\nconst Page = ({ flipped, delay = 0, isCover, zIndex, rotateY, page }) =>\n  <StyledPage zIndex={zIndex} isCover={isCover} flipped={flipped} rotateY={rotateY} delay={delay}>\n    <StyledPageFront isCover={isCover} page={page} flipped={flipped} />\n    <StyledPageBack isCover={isCover} page={page} />\n  </StyledPage>\n\nexport default Page\n","import React, { Component } from 'react'\nimport styled, { css, keyframes } from 'styled-components'\nimport map from 'lodash/map'\n\nimport Page from './Page'\n\nconst PAGES = [\n  'https://assets.lls.fr/books/978-2-37760-153-0-GEO2_P_2019.png',\n  'https://assets.lls.fr/marketing/geographie/GEO_DP_argu_edito_1.png',\n  'https://assets.lls.fr/marketing/geographie/GEO_DP_argu_edito_2.png',\n  'https://assets.lls.fr/marketing/geographie/GEO_DP_argu_edito_3.png',\n  'https://assets.lls.fr/marketing/geographie/GEO_DP_argu_edito_4.png',\n  'https://assets.lls.fr/marketing/geographie/GEO_DP_argu_edito_5.png',\n  'https://assets.lls.fr/marketing/geographie/GEO_DP_argu_edito_9.png',\n]\n\nconst bounceAnimation = keyframes`\n  0% {\n    transform: translate3d(0px, 0px, 0px) scale3d(1, 1, 1);\n  }\n\n  20% {\n    transform: translate3d(0px, -100px, 0px) scale3d(0.95, 1.02, 1);\n  }\n\n  40% {\n    transform: translate3d(0px, 0px, 0px) scale3d(1, 1, 1);\n  }\n\n  100% {\n    transform: translate3d(0px, 0px, 0px) scale3d(1, 1, 1);\n  }\n`\n\nconst stopAnimation = keyframes`\n  0% {\n    transform: translate3d(0px, 0px, 0px) scale3d(1, 1, 1);\n  }\n\n  100% {\n    transform: translate3d(0px, 0px, 0px) scale3d(1, 1, 1);\n  }\n`\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  perspective: 1000px;\n  transform-style: preserve-3d;\n  height: 100vh;\n`\n\nconst StyledBook = styled.div`\n  position: relative;\n  transform-style: preserve-3d;\n  height: 365px;\n  animation: ${({ flipped }) => flipped ? css`${stopAnimation} 1.5s ease forwards` : css`${bounceAnimation} 1.5s cubic-bezier(0, 1.04, 0.51, 1.23) 2s infinite`};\n`\n\nconst StyledBookWrapper = styled.div`\n  transform-style: preserve-3d;\n  transition: all 0.5s ease ${({ flipped }) => flipped ? '0' : '0.75'}s;\n  transform: rotate3d(0, 1, 0, ${({ flipped }) => flipped ? '0' : '20'}deg) translate3d(0px, 0px, ${({ flipped }) => flipped ? '250' : '-100'}px);\n`\n\nconst StyledSpin = styled.div`\n  position: absolute;\n  left: -37px;\n  height: 100%;\n  width: 35px;\n  transform: rotate3d(0, 1, 0, -90deg) translate3d(${({ flipped }) => flipped ? '-30' : '0'}px,0px,0px);\n  transition: transform 0.5s ease ${({ flipped }) => flipped ? '0' : '0.75'}s;\n  transform-origin: right;\n  background: #eaeaea;\n  border: 1px solid #929292d9;\n`\n\nclass App extends Component{\n  state = { flipped: false }\n\n  flip = () => this.setState(state => ({ flipped: !state.flipped }))\n\n  render() {\n    const { flipped } = this.state\n\n    return (\n      <StyledWrapper>\n        <StyledBookWrapper flipped={flipped}>\n          <StyledBook onClick={this.flip} flipped={flipped}>\n            {map(PAGES, (page, index) =>\n              <Page\n                flipped={[5, 6].includes(index) ? false : flipped}\n                delay={flipped ? 0.1 * index : 0.1 * (6 - index)}\n                isCover={[0, 6].includes(index)}\n                zIndex={6 - index}\n                rotateY={-180 + 10 * index}\n                page={page}\n                key={index}\n              >\n                {index}\n              </Page>\n            )}\n            <StyledSpin flipped={flipped} />\n          </StyledBook>\n        </StyledBookWrapper>\n      </StyledWrapper>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}